{"version":3,"sources":["components/SummaryItem.js","components/Summary.js","components/SimpleChart.js","components/Map.js","components/ConfirmedMap.js","components/DetailsTable.js","App.js","serviceWorker.js","index.js"],"names":["SummaryItem","props","state","totalClass","this","textColorClass","total","newCount","new","className","style","width","height","title","React","Component","Summary","dateStr","Date","data","date","toDateString","Card","margin","Header","Body","newConfirmedCount","confirmedCount","newDeathsCount","deathsCount","newTestedCount","testedCount","newLondonCount","londonCount","SimpleChart","chartRef","createRef","ctx","current","getContext","labels","datasets","label","backgroundColor","color","borderColor","fill","options","responsive","legend","display","text","maintainAspectRatio","tooltips","mode","intersect","hover","scales","xAxes","scaleLabel","yAxes","Chart","type","ref","Map","searchRef","onScriptLoad","bind","map","window","google","maps","input","searchBox","places","SearchBox","controls","ControlPosition","TOP_LEFT","push","addListener","setBounds","getBounds","getPlaces","length","bounds","LatLngBounds","place","geometry","viewport","union","extend","location","fitBounds","console","log","onMapLoad","s","document","createElement","src","x","getElementsByTagName","parentNode","insertBefore","addEventListener","e","placeholder","defaultProps","center","lat","lng","zoom","ConfirmedMap","lastWindow","Marker","draggable","animation","Animation","DROP","position","icon","loadGeoJson","setStyle","strokeWeight","strokeColor","fillColor","fillOpacity","records","i","record","laglng","LatLng","latitude","longitude","Name","Count","GetColor","count","dMarker","AddInfoWindow","marker","content","NewCount","infoWindow","InfoWindow","event","close","open","AddMarks","AddBoundary","AddRecords","DetailsTable","id","class","maxHeight","t","name","App","confirmedData","summary","details","isLoading","setState","fetch","then","response","json","minHeight","cumulativeConfirmed","cumulativeDeaths","cumulativeTested","dailyConfirmed","dailyDeaths","dailyTested","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f5f9b1c2.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nclass SummaryItem extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={};\r\n    }\r\n    render(){\r\n        let totalClass=this.props.textColorClass+' front-weight-bold';\r\n        let total=\"NA\";\r\n        if(this.props.total>0)\r\n        {\r\n            total=this.props.total;            \r\n        }\r\n        let newCount=\"NA\";\r\n        if(this.props.new>0)\r\n        {\r\n            newCount='+'+this.props.new;            \r\n        }\r\n        if(this.props.new<0)\r\n        {\r\n            newCount=this.props.new;\r\n        }\r\n        \r\n        if(total<=0){}\r\n        return(\r\n            <div className=\"border-bottom d-inline-block text-center\" style={{width:6+'rem',height:6+'rem'}}>\r\n                <small className=\"font-weigh-lighter\">New:<span className={this.props.textColorClass}>{newCount}</span></small>\r\n                <h3 className={totalClass}>{total}</h3>\r\n                <h6>{this.props.title}</h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SummaryItem;","import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport SummaryItem from './SummaryItem'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nclass Summary extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={};\r\n    }\r\n    render(){\r\n        let date=new Date(this.props.data.date);\r\n        let dateStr=date.toDateString();\r\n        return(\r\n        <Card style={{ 'minWidth':'9rem','maxWidth':'28rem',margin:'auto'}}>\r\n            <Card.Header>\r\n                 <span className=\"font-weight-bold\">COVID-19 UK Summary</span><span className=\"float-right small\">{dateStr}</span>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <SummaryItem title=\"Confirmed\" new={this.props.data.newConfirmedCount} total={this.props.data.confirmedCount} textColorClass=\"text-danger\"></SummaryItem>\r\n                <SummaryItem title=\"Deaths\" new={this.props.data.newDeathsCount} total={this.props.data.deathsCount} textColorClass=\"text-dark\"></SummaryItem>\r\n                <SummaryItem title=\"Tested\" new={this.props.data.newTestedCount} total={this.props.data.testedCount} textColorClass=\"text-info\"></SummaryItem>\r\n                <SummaryItem title=\"London\" new={this.props.data.newLondonCount} total={this.props.data.londonCount} textColorClass=\"text-warning\"></SummaryItem>\r\n            </Card.Body>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\nexport default Summary;","import React from 'react'\r\nimport Chart from 'chart.js'\r\n\r\nexport default class SimpleChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={};\r\n    }\r\n    chartRef = React.createRef();\r\n    componentDidMount(){\r\n        const ctx = this.chartRef.current.getContext(\"2d\");\r\n        let data = {\r\n            labels:this.props.labels,\r\n            datasets: [{\r\n                label: this.props.title,\r\n                backgroundColor: this.props.color,\r\n                borderColor: this.props.color,\r\n                fill: false,\r\n                data: this.props.data\r\n                }]\r\n        };\r\n        let options = {\r\n            responsive: true,\r\n            legend: {\r\n                 display: false\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: this.props.title\r\n            },\r\n            maintainAspectRatio: false,\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false,\r\n            },\r\n            hover: {\r\n                mode: 'nearest',\r\n                intersect: true,\r\n            },\r\n            scales: {\r\n                xAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: false,\r\n                    }\r\n                }],\r\n                yAxes: [{\r\n                    display: true,\r\n                    scaleLabel: {\r\n                        display: false,\r\n                    }\r\n                }]\r\n            }\r\n        };\r\n\r\n        new Chart(ctx,{\r\n            type:this.props.type,\r\n            data:data,\r\n            options:options,\r\n        });\r\n    }\r\n    render(){\r\n        return (\r\n            <canvas ref={this.chartRef}></canvas>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onScriptLoad = this.onScriptLoad.bind(this)\r\n  }\r\n  ref=React.createRef();\r\n  searchRef=React.createRef();\r\n\r\n  onScriptLoad() {\r\n    const map = new window.google.maps.Map(\r\n      this.ref.current,\r\n      this.props.options);\r\n      var input = this.searchRef.current;\r\n      var searchBox = new window.google.maps.places.SearchBox(input);\r\n      map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(input);\r\n      map.addListener('bounds_changed', function() {\r\n        searchBox.setBounds(map.getBounds());\r\n      });\r\n\r\n      searchBox.addListener('places_changed', function() {\r\n          var places = searchBox.getPlaces();\r\n          if (places.length == 0) {\r\n              return;\r\n          }\r\n          var bounds = new window.google.maps.LatLngBounds();\r\n          var place = places[0];\r\n          if (!place.geometry) {\r\n            console.log(\"Returned place contains no geometry\");\r\n            return;\r\n          }\r\n          if (place.geometry.viewport) {\r\n            bounds.union(place.geometry.viewport);\r\n          } else {\r\n            bounds.extend(place.geometry.location);\r\n          }\r\n          map.fitBounds(bounds);\r\n      });\r\n    this.props.onMapLoad(map)\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!window.google) {\r\n      var s = document.createElement('script');\r\n      s.type = 'text/javascript';\r\n      s.src = `https://maps.google.com/maps/api/js?libraries=places&key=AIzaSyA9cxRpEVUFHDVDa3DgZe5NLLe5OF__b38`;\r\n      var x = document.getElementsByTagName('script')[0];\r\n      x.parentNode.insertBefore(s, x);\r\n      s.addEventListener('load', e => {\r\n        this.onScriptLoad()\r\n      })\r\n    } else {\r\n      this.onScriptLoad()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ width: '100%', height: '100%' }} ref={this.ref} ></div>\r\n        <input type=\"text\" placeholder=\"Search Box\" ref={this.searchRef}/> \r\n      </div>\r\n    );\r\n  }\r\n}\r\nMap.defaultProps = {\r\n    options:{\r\n        center: { lat: 51.5499133, lng: -0.1985144 },\r\n        zoom: 8\r\n    }\r\n}\r\nexport default Map","import React from 'react'\r\nimport Map from './Map'\r\nexport default class ConfirmedMap extends React.Component{\r\n  lastWindow=null;\r\n  AddMarks(map){\r\n    let hPosition = { lat: 51.5499133, lng: -0.1985144 };\r\n    let wPosition = { lat: 51.521248, lng: -0.102103 };\r\n    new window.google.maps.Marker(\r\n      {\r\n          map: map,\r\n          draggable: false,\r\n          animation: window.google.maps.Animation.DROP,\r\n          position: hPosition,\r\n          icon:'https://www.google.com/maps/vt/icon/name=assets/icons/poi/tactile/pinlet_shadow_v3-2-medium.png,assets/icons/poi/tactile/pinlet_outline_v3-2-medium.png,assets/icons/poi/tactile/pinlet_v3-2-medium.png,assets/icons/poi/quantum/pinlet/constellation_star_pinlet-2-medium.png&highlight=ff000000,ffffff,fbc02d,ffffff?scale=1',\r\n      });\r\n      new window.google.maps.Marker(\r\n        {\r\n            map: map,\r\n            draggable: false,\r\n            animation: window.google.maps.Animation.DROP,\r\n            position: wPosition,\r\n            icon:'https://www.google.com/maps/vt/icon/name=assets/icons/poi/tactile/pinlet_shadow_v3-2-medium.png,assets/icons/poi/tactile/pinlet_outline_v3-2-medium.png,assets/icons/poi/tactile/pinlet_v3-2-medium.png,assets/icons/poi/quantum/pinlet/constellation_star_pinlet-2-medium.png&highlight=ff000000,ffffff,fbc02d,ffffff?scale=1',\r\n        });\r\n  }\r\n  AddBoundary(map){\r\n    map.data.loadGeoJson('https://ywhe.github.io/UK-COVID-19-Daily-Update/England.json');\r\n    map.data.setStyle({\r\n        strokeWeight: 0.35,\r\n        strokeColor: 'red',\r\n        fillColor: 'red',\r\n        fillOpacity:0\r\n    });\r\n  }\r\n  AddRecords(map){\r\n    let bounds = new window.google.maps.LatLngBounds();\r\n    let records=this.props.records;\r\n    if(!records){ records=[];}\r\n    for (var i = 0; i < records.length; i++) {\r\n        var record = records[i];\r\n        var laglng = new window.google.maps.LatLng(record.latitude, record.longitude);\r\n        var title = record.Name + \"  \" + record.Count;\r\n        bounds.extend(laglng);\r\n        var color = this.GetColor(record.count);\r\n        var icon = 'https://www.google.com/maps/vt/icon/name=assets/icons/poi/tactile/pinlet_shadow_v3-2-medium.png,assets/icons/poi/tactile/pinlet_outline_v3-2-medium.png,assets/icons/poi/tactile/pinlet_v3-2-medium.png,assets/icons/poi/quantum/pinlet/medical_pinlet_v2-2-medium.png&highlight=ff000000,ffffff,' + color + ',ffffff?scale=1'\r\n        var dMarker = new window.google.maps.Marker({\r\n            map: map,\r\n            position: laglng,\r\n            title: title,\r\n            icon: icon\r\n        });\r\n        this.AddInfoWindow(map,dMarker, record);\r\n    }\r\n  }\r\n  AddInfoWindow(map,marker, record) {\r\n      var content = \"<div><h6>\" + record.Name + \"</h6><br /><p>Confirmed:<b class='text-danger'>\" + record.Count + \"</b></p><p>New:    <b class='text-danger'>\" + record.NewCount + \"</b></p></div>\"\r\n      var infoWindow = new window.google.maps.InfoWindow({\r\n          content: content\r\n      });\r\n      window.google.maps.event.addListener(marker, 'click', function () {\r\n          if (this.lastWindow != null) {\r\n              this.lastWindow.close();\r\n          }\r\n          infoWindow.open(map, marker);\r\n          this.lastWindow = infoWindow;\r\n      });\r\n  }\r\n  GetColor(count) {\r\n    var color = 'ffce99';\r\n    if (count > 5) color = 'f88181';\r\n    if (count > 10) color = 'ff8f00';\r\n    if (count > 20) color = 'ff5b00';\r\n    if (count > 30) color = 'ff0505';\r\n    if (count > 40) color = 'f000ff';\r\n    if (count > 50) color = '000000';\r\n    return color;\r\n  }\r\n\r\n  render(){\r\n    return (<Map onMapLoad={map=>{\r\n      this.AddMarks(map);\r\n      this.AddBoundary(map);\r\n      this.AddRecords(map);\r\n    }}></Map>);\r\n  }\r\n}","import React from 'react'\r\nexport default class DetailsTable extends React.Component{\r\n    render(){\r\n        return (\r\n            <table id=\"table\" class=\"table table-responsive\" style={{maxHeight:'100vh'}}>\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th>Location</th>\r\n                        <th>Confirmed <span class=\"badge badge-danger badge-pill\">New</span></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.data.map(t=>{\r\n                        let name=t.name;\r\n                        let count=<span>{t.count}<span class='badge badge-danger badge-pill'>{t.newCount}</span></span>;\r\n                        return(\r\n                        <tr>\r\n                            <td>{name}</td>\r\n                            <td>{count}</td>\r\n                        </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Summary from './components/Summary'\nimport SimpleChart from './components/SimpleChart'\nimport ConfirmedMap from './components/ConfirmedMap'\nimport DetailsTable from './components/DetailsTable'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      data:{labels:[],\n        confirmedData:[],\n        summary:{},\n        details:[]},\n      isLoading: true,\n    };\n  }\n  componentDidMount(){\n    this.setState({isLoading:true});\n    let url=\"https://raw.githubusercontent.com/ywhe/uk/master/data.json\"\n    fetch(url)\n    .then(response=>{\n      return response.json()})\n    .then(data=>{\n      this.setState({\n        data:data,\n        isLoading:false\n      });\n    });\n  }\n  render(){\n    if(this.state.isLoading)\n    {\n        return (<div>is loading.....</div>);\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Summary data={this.state.data.summary}></Summary>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm\" style={{minHeight:'300px'}}>\n            <SimpleChart type=\"line\" title=\"Cumulative Confirmed\" color=\"red\" labels={this.state.data.labels} data={this.state.data.cumulativeConfirmed}></SimpleChart>\n          </div>\n          <div className=\"col-sm\" style={{minHeight:'300px'}}>\n            <SimpleChart type=\"line\" title=\"Cumulative Deaths\" color=\"black\" labels={this.state.data.labels} data={this.state.data.cumulativeDeaths}></SimpleChart>\n          </div>\n          <div className=\"col-sm\" style={{minHeight:'300px'}}>\n            <SimpleChart type=\"line\" title=\"Cumulative Tested\" color=\"green\" labels={this.state.data.labels} data={this.state.data.cumulativeTested}></SimpleChart>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm\" style={{minHeight:'300px'}}>\n            <SimpleChart type=\"bar\" title=\"Daily Confirmed\" color=\"red\" labels={this.state.data.labels} data={this.state.data.dailyConfirmed}></SimpleChart>\n          </div>\n          <div className=\"col-sm\" style={{minHeight:'300px'}}>\n            <SimpleChart type=\"bar\" title=\"Daily Deaths\" color=\"black\" labels={this.state.data.labels} data={this.state.data.dailyDeaths}></SimpleChart>\n          </div>\n          <div className=\"col-sm\" style={{minHeight:'300px'}}>\n            <SimpleChart type=\"bar\" title=\"Daily Tested\" color=\"green\" labels={this.state.data.labels} data={this.state.data.dailyTested}></SimpleChart>\n          </div>\n        </div>\n        <div style={{height:'1rem'}}></div>\n        <div className=\"row vh-100\">\n          <div className=\"col-md-8\" style={{height:'100vh'}}>\n              <ConfirmedMap records={this.state.data.details}></ConfirmedMap>\n            </div>\n          <div className='col-sm'>\n              <DetailsTable data={this.state.data.details}></DetailsTable> \n          </div>\n        </div>\n      </div>\n    );\n  } \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}